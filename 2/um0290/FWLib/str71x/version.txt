/******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
* File Name          : version.txt
* Author             : MCD Application Team
* Version            : V4.0
* Date               : 10/09/2007
* Description        : Version file for STR71x Firmware Library.
********************************************************************************
* THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
* CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
*******************************************************************************/


* V4.0 - 10/09/2007 :  
====================

 + All functions declared in *.h files are moved to *.C files. 
 + inline keyword removed from all drivers.
 + Flash driver deleted (covered by the STR7 Flash Library).
 + retarget.c removed.
 + firmware drivers template updated.
 + Add RVMDK, EWARMv5 and RIDE template project toolchain.

 + 71x_map.h
   - All typedef volatile struct modified to typedef struct.
   - All EMPTY volatile type in all structure were modified to u16 or u32 types.

 + 71x_init.s
  - RCCU_PER_Init      : added.    
  - RCCU_PER_Base_addr : added.
  - RCCU_PER_off_addr  : added.
  - EMI_INIT (macro): change macro by define
  - EMI_INIT (macro): change macro by define
                     - Only P2.0 to P2.3 are Configured in AF_PP mode.
                     - EMI bank1: by default configured to 15 wait states.
                  
  - PERIPHERAL_INIT (macro): change macro by define
                           - All APB1 and APB2 peripherals clocks are disabled
                             except EIC.
                           - Power consumption is reduced by clearing all unused 
                             bits in  the RCCU_PER register.
                           - PERIPHERAL_INIT enabled by default.
                           
  - Switch to SYS mode instead of USR mode.
  - CKDIS2_config_all 0x7FDD chanegd to CKDIS2_config_all 0x7FDD
  - SWRES_off_addr, SWRES1_config_all and SWRES2_config_all removed.

 + 71x_conf.h
    - Change '#define DEBUG' by '#define DEBUG    1'
    
 + 71x__type.h
   - Add new types: sc32, sc16, sc8, vsc32, vsc16 and vsc8  
   
  + 71x__it.c 
    - Add basic fault exception handling: in "Undefined_Handler" and "Prefetch_Handler",
     "Abort_Handler" ISR. The following code was added:
     /* Go to infinite loop when exception occurs */
     while (1)
     {
     }   
     
 + 71x_adc12.c
   * Function modification:
    - ADC12_ModeConfig: replace the conditional operator (?:) by if condition.
    - ADC12_ChannelSelect : ADC12->CSR |= ADC12_Channel; changed to 
                            ADC12->CSR &= 0xFFCF;
                            ADC12->CSR |= ADC12_Channel; .
    - ADC12_PrescalerConfig : modified to configure the ADC12_CPR register with 
                             the nearest prescaler value.


 + 71x_apb.c
   * Constant modification:
    - APB1_ALL_Periph: added. 
    - APB2_ALL_Periph: added. 


 + 71x_bspi.c
  * Function modification:
    - BSPI_TrFifoDepth: BSPIx->CSR2 &= (TDepth * 0x400) | ~0x3C00;  repalced with 
                        BSPIx->CSR2 &= ~0x3C00;
    - BSPI_RcFifoDepth: BSPIx->CSR1 &= (RDepth * 0x1000) | ~0xF000; repalced with  
                        BSPIx->CSR1 &= ~0xF000;
    - BSPI_ClkFEdge: modified as follows:
       ENABLE: Enable capturing the first data sample on the first edge of SCK.
       DISABLE: Enable capturing the first data sample on the second edge of SCK.
       
    - BSPI_FlagStatus: replace the conditional operator (?:) by if condition.
    - BSPI_BufferReceive: replace vu16 by vu8.
    - BSPI_ItEnable: Renamed to BSPI_ErrItSrc.
    - BSPI_WordBufferSend: new function added.
    - BSPI_WordBufferReceive: new function added.
    - BSPI_BufferSend: renamed to BSPI_ByteBufferSend.
    - BSPI_BufferReceive: renamed to BSPI_ByteBufferReceive.

  * Constant modification:
    - BSPI_PESET_Mask: renamed to BSPI_BSPE_Mask.
    - BSPI_BSPI0_Base: deleted.
    - BSPI_BSPI1_Base: deleted.
    - BSPI_DFIFO_Mask: value changed from 0xFFFE to 0x01.

  * Enumeration modification:
    - BSPI_ITS: renamed to BSPI_IT_ERR, 
                renamed BSPI_BERIT to BSPI_BEIE
                renamed BSPI_RCIT to BSPI_REIE
                renamed BSPI_ALL to BSPI_ALL_ERR
    - BSPI_TR_IT_SRCS: renamed to BSPI_IT_TR.
    - BSPI_RC_IR_SRCS: renamed to BSPI_IT_RC.

 + 71x_can.c
   *Function modification 
    - CAN_SetTxMsgObj: Remote functionality added to the parameters, masks updated, while loop deleted
    - CAN_SetRxMsgObj: Masks updated for the standard ID configuration, while loop deleted 
    - CAN_SendMessage: changed to use two new functions CAN_UpdateMsgObj and CAN_TransmitRequest 
    - CAN_BasicSendMessage: configuration for extended ID corrected
    - CAN_SetUnusedMsgObj : while loop deleted
    - CAN_InvalidateAllMsgObj renamed CAN_SetUnusedAllMsgObj
    - CAN_IsMessageWaiting renamed CAN_GetMsgReceiveStatus
    - CAN_IsTransmitRequested renamed CAN_GetMsgTransmitRequestStatus
    - CAN_IsObjectValid renamed CAN_GetMsgValidStatus
    - CAN_IsInterruptPending renamed CAN_GetMsgInterruptStatus
    - CAN_UpdateMsgObj: new function added.
    - CAN_TransmitRequest: new function added.
    - CAN_GetFlagStatus: new function added.
    - CAN_GetTransmitErrorCounter: new function added.
    - CAN_GetReceiveErrorCounter: new function added. 
    
   *Macro modification
    - EXT_RANGE_ID_MASK_L
    - EXT_RANGE_ID_MASK_H
    - EXT_RANGE_ID_ARB_L
    - EXT_RANGE_ID_ARB_H
    - EXT_FIXED_ID_MASK_L
    - EXT_FIXED_ID_MASK_H
    - EXT_FIXED_ID_ARB_L
    - EXT_FIXED_ID_ARB_H

 + 71x_emi.c
  * Function modification:
    - EMI_Config: modify this function to configure Block Size and the number of wait states
    - EMI_Enable: new function added.

  * Constant modification:
    - EMI_DISABLE: deleted.
    - EMI_BANK0: value modified to 0x00.
    - EMI_BANK1: value modified to 0x01.
    - EMI_BANK2: value modified to 0x02.
    - EMI_BANK3: value modified to 0x03.
    - EMI_0_WaitState: added.      
    - EMI_1_WaitState: added.      
    - EMI_2_WaitStates: added.
    - EMI_3_WaitStates: added     
    - EMI_4_WaitStates: added.     
    - EMI_5_WaitStates: added.     
    - EMI_6_WaitStates: added.     
    - EMI_7_WaitStates: added.     
    - EMI_8_WaitStates: added.     
    - EMI_9_WaitStates: added.     
    - EMI_10_WaitStates: added.    
    - EMI_11_WaitStates: added.    
    - EMI_12_WaitStates: added.    
    - EMI_13_WaitStates: added.    
    - EMI_14_WaitStates: added.    
    - EMI_15_WaitStates: added.    

  * Macro modification:
    - EMI_WAITSTATE(n) ((n) << 2): deleted.
    - EMI_BankConfig(Bank)  *(vu16 *)(EMI_BASE + (4 * Bank)): added.


 + 71x_gpio.c
   * Function modification:
    - GPIO_ByteWrite: replace the conditional operator (?:) by if condition.


 + 71x_i2c.c
   * Function modification:
    - I2C_FlagStatus: remove the second parameter: "Access".
    - I2C_FlagClear: modify I2C_Flags parameter type to u32.
    - I2C_GetLastEvent: added.
    - I2C_CheckEvent: added.

  * Constant modification:
    - I2C_SB: added.
    - I2C_M_SL: added.
    - I2C_ADSL: added.
    - I2C_BTF: added.
    - I2C_BUSY: added.
    - I2C_TRA: added.
    - I2C_ADD10: added.
    - I2C_EVF: added.
    - I2C_GCAL: added.
    - I2C_BERR: added.
    - I2C_ARLO: added.
    - I2C_STOPF: added.
    - I2C_AF: added.
    - I2C_ENDAD: added.
    - I2C_STOP: added.
    - I2C_ACK: added.
    - I2C_START: added.

    - I2C_EVENT_SLAVE_ADDRESS_MATCHED: added.   
    - I2C_EVENT_SLAVE_BYTE_RECEIVED: added.     
    - I2C_EVENT_SLAVE_BYTE_TRANSMITTED: added.  
    - I2C_EVENT_MASTER_MODE_SELECT: added.      
    - I2C_EVENT_MASTER_MODE_SELECTED: added.    
    - I2C_EVENT_MASTER_BYTE_RECEIVED: added.    
    - I2C_EVENT_MASTER_BYTE_TRANSMITTED: added. 
    - I2C_EVENT_MASTER_MODE_ADDRESS10: added.   
    - I2C_EVENT_SLAVE_STOP_DETECTED: added.     
    - I2C_EVENT_SLAVE_ACK_FAILURE: added.       
    - I2C_BUS_ERROR_DETECTED: added.       
    - I2C_ARBITRATION_LOST: added.         
    - I2C_SLAVE_GENERAL_CALL: added.       

  * Enumeration modification:
    - I2C_Flags: deleted.


 + 71x_pcu
   * Function modification:
    - PCU_MVRStatus: replace the conditional operator (?:) by if condition.
    - PCU_FlagStatus: replace the conditional operator (?:) by if condition.
    - PCU_VRStatus: replace the conditional operator (?:) by if condition.
    - PCU_LVDStatus: replace the conditional operator (?:) by if condition.
    - PCU_WFIEnter: removed.
    - PCU_LPMEnter: removed.
    - PCU_LPModesConfig: new function added.
    - PCU_WFI: new function added.
    - PCU_STOP: new function added.
    - PCU_STANDBY: new function added.
    - PCU_FlashBurstCmd: new function added.
    - PCU_32OSCCmd: new function added.

   * Constant modification:
    - PCU_MVR_Mask: deleted.
    - PCU_LPR_Mask: deleted.
    - PCU_LVD_Mask: deleted.
    - PCU_PWRDWN_Mask: deleted.
    - PCU_WFI_CKSEL_Mask: deleted.
    - PCU_EN_HALT_Mask: deleted.
    - PCU_EN_HALT_Mask: deleted.

  * Enumeration modification:
    - WFI_EXTERNAL: renamed to WFI_Ck_AF.
    - LPM_MODES: enumeration is deleted.
    - LPWFI_Clock_Typedef: enumeration is added.


 + 71x_rccu.c
   * Function modification:
    - RCCU_FCLKConfig: renamed to RCCU_PCLK1Config.
    - RCCU_PCLKConfig: renamed to RCCU_PCLK2Config.
    - RCCU_PLL1Disable: added.
    - RCCU_PLL2Disable: added.
    - RCCU_Div2Status: replace the conditional operator (?:) by if condition.
    - RCCU_USBCLKConfig: coding upgraded.
    - RCCU_PLL2Config: add FRQRNG bit configuration according to frequency range bit.
                       add a third input: u32 HCLK_PIN_Clock .
    - RCCU_RCLKSourceConfig: modify
        RCCU->PLL1CR=((RCCU->PLL1CR & ~RCCU_DX_Mask) | 0x00000003) & ~RCCU_FREEN_Mask;
     by:
        RCCU->PLL1CR = (RCCU->PLL1CR | RCCU_DX_Mask) & ~RCCU_FREEN_Mask;
    - RCCU_FlagStatus: replace the conditional operator (?:) by if condition.
    - RCCU_PLL1FreeRunningModeConfig: added.
    - RCCU_FrequencyValue: function updated to get frequency value in free running mode.
    - RCCU_PLL1Disable: added.
    - RCCU_PLL2Disable: added.
    - RCCU_GenerateSWReset: added.

   * Constant modification:
    - RCCU_PLLEN_Mask: added.
    - RCCU_FRQRNG_Mask: added.

   * Enumeration modification:
    - RCCU_PCLK: renamed to RCCU_PCLK2.
    - RCCU_FCLK: renamed to RCCU_PCLK1.
    - RCCU_RTC_CLOCK: renamed to RCCU_CK_AF.

 + 71x_rtc.c 
   * Function modification:
    - RTC_FlagStatus: replace the conditional operator (?:) by if condition.
    - RTC_ITStatus: replace the conditional operator (?:) by if condition.

 + 71x_tim.c
   * Function modification:
    - TIM_ClockSourceValue: replace the conditional operator (?:) by if condition.
    - TIM_ClockLevelValue: replace the conditional operator (?:) by if condition.
    - TIM_OCMPModeConfig: replace the conditional operator (?:) by if condition.
    - TIM_PWMOModeConfig: replace the conditional operator (?:) by if condition.
    - TIM_PWMIModeConfig: replace the conditional operator (?:) by if condition.
    - TIM_FlagStatus: replace the conditional operator (?:) by if condition.

   * Constant modification:
    - TIM_TOE_Mask: renamed to TIM_TOIE_Mask.
    - TIM_OCAIE_mask: renamed to TIM_OCAIE_Mask.
    - vIM_OCBIE_mask: renamed to TIM_OCBIE_Mask.

 + 71x_uart.c
   * Function modification:
    - UART_BaudRateConfig: updated to configure the UARTn_BR register with the 
                           nearest baudrate value.
    - UART_ByteReceive: In while polling remove "| UART_RxHalfFull" from the condition.
    - UART_9BitByteReceive: In while polling remove "| UART_RxHalfFull" from the condition.
    - sendchar: renamed to SendChar and modify the input function type "char" to u8.

   * Constant modification:
    - UART_RxBufFull: renamed to UART_RxBufNotEmpty.


 + 71x_wdg.c
   * Function modification:
    - abs_value: added.

   * Macro modification:
    - abs(x) ((x)>0 ? (x) : -(x)): deleted.



 + Examples 

    - Adc12: - adc_int: add MCLK, PCLK1, PCLK2 clock configuration.
                        add enable of ADC12 and GPIO0 clocks on APB2.
             - polling: add enable of ADC12 and GPIO0 clocks on APB2 and UART0 clock 
                        on APB1 and code clean up .
    - APB  : modified.

    - BSPI : - fifo: add MCLK, PCLK1, PCLK2 clock configuration.
                      add enable of BSPI0 and BSPI1 clocks on APB1 and GPIO0 clock on APB2.
             - interrupt:  new example added.
    - CAN  : LED_Map[]: table declaration deleted, access to led is made via GPIO functions.
             LED_Init,LED_On and LED_Toggle  : removed.
             enable CAN clock on APB1 and GPIO1 clock on APB2.
             return 0: replaced with an infinite loop.
        
    - EMI  : modified.

    - Flash: removed.

    - GPIO : add MCLK, PCLK1, PCLK2 clock configuration.
             add enable of GPIO0 and GPIO1 clocks on APB2.

    - I2C  : add MCLK, PCLK1, PCLK2 clock configuration.
             add enable I2C0, UART0 clock on APB1 and enable GPIO1, GPIO0 clock on APB2.
             I2C_FlagStatus(): remove all DIRECT and INDIRECT parameter.

    - PCU  :  modified.

    - RCCU : add enable CKOUT clock on APB2.
    
    - RTC  : add enable RTC clocks on APB2.

    - TIM  : - Music: add enable TIM1, GPIO0 and GPIO1 clocks on APB2.
             - OCMP : add enable TIM3, GPIO0 and GPIO1 clocks on APB2.               
             - OPM  : add enable TIM3 and GPIO1 clocks on APB2.                
             - PWMI : add MCLK, PCLK1, PCLK2 clock configuration.
                      add enable of TIM3 and GPIO1 clocks on APB2.               
             - PWMO : add enable of TIM3 and GPIO1 clocks on APB2.

    - UART : - fifo: - example1: new example.

                     - example2: new example.

             - interrupt: add MCLK, PCLK1, PCLK2 clock configuration.
                          add enable of UART0 clock on APB1 and GPIO0 clock on APB2.
             - polling :  add MCLK, PCLK1, PCLK2 clock configuration.
                          add enable of UART0 clock on APB1 and GPIO0 clock on APB2.

    - WDG  : example modified; the timer 3 is used to refresh watchdog counter 
             and add enable of TIM3, GPIO0 and GPIO1 clocks on APB2.
    
    - XTI  : add MCLK, PCLK1, PCLK2 clock configuration.
             add enable of XTI and GPIO0 clocks on APB2.

 
* V3.1 - 13/01/2006 
====================
All remaining functions in h file are moved to C file. 
All inline are removed in all c files.

PCU
* Function modification:
Add a basy bit state verification bifore writing in PWRCR register
* Correct Enumerations:
 - PCU_VR enumeration : the PCU_LPR value is wrong (should be : 0x0010 not 0x0020)
 - Add new on going programing bit decalaration : #define PCU_BUSY_Mask   0x4000

RCCU
* Function modification:
- RCCU_PLL1Config : Setting of the RCCU_FREEN in the RCCU_PLL1CR register
according to the PLL1 input clock.
- RCCU_FrequencyValue : Correction of the multiplication factor 28 to 24.

I2C
* Function modification:
- I2C_GetStatus : I2C control and status register are read in local variables
before function return.
- I2C_BufferSend() : deleted
- I2C_BufferReceive() : deleted
- I2C_StringSend() : deleted
- Prototypes of the deleted routines are suppressed in i2c.h

FLASH
* Function modification:
- FLASH_PermanantDebugPrConfig : unused variable removed.
- FLASH_PermanantDebugPrConfig : becomes FLASH_PermanentDebugPrConfig
- FLASH_FlagStatus             : initialize FlagStatus TmpResult = RESET
- Improve commentaries

* Constant modification:
- flashwriteoperation enumeration in flash.h is deleted
- FLASH_BER_Mask in flash.h is deleted
- FLASH_MER_Mask in flash.h is deleted
- FLASH_BSYA1_Mask in flash.h is deleted
- FLASH_BSYA2_Mask in flash.h is deleted
- FLASH_INTP_Mask in flash.h is deleted

WDG
* Function modification
- FindFactors() : replace unsigned int by u16 and unsigned long by u32
- WDG_PeriodValueConfig(): replace unsigned int by u16 and unsigned long by u32
- Improve commentaries

TIM
* Function modification
- TIM_OPModeConfig(): Replace TIM_OMP_Mask by TIM_OPM_Mask
- Improve commentaries

*constant modification
- TIM_OMP_Mask in TIM.h is replaced by TIM_OPM_Mask 

RTC
* Function modification
- RTC_Delay()  		: deleted
- RTC_CounterConfig()	: delete the RTC_WaitForLastTask() after the RTC_EnterCfgMode()
- RTC_PrescalerConfig()	: delete the RTC_WaitForLastTask() after the RTC_EnterCfgMode()
			  delete the RTC_WaitForLastTask() after the RTC_ExitCfgMode()
- RTC_AlarmConfig()	: delete the RTC_WaitForLastTask() after the RTC_EnterCfgMode()
			: delete the RTC_WaitForLastTask() after the RTC_ExitCfgMode()
- RTC_FlagClear()	: delete the RTC_WaitForLastTask() after the RTC_EnterCfgMode()
			: delete the RTC_WaitForLastTask() after the RTC_ExitCfgMode()
- RTC_ITClear()		: add the RTC_WaitForLastTask() after the instruction  RTC->CRL &= ~Xrtcit;
			: delete the RTC_WaitForLastTask() after the RTC_ExitCfgMode()
			: prototype changed in the rtc.h file 
* Constant modification
- RTC_NONE 	: deleted 
- RTC_GI_Index	: deleted
- RTC_OWI_Index : deleted
- RTC_AI_Index  : deleted

ADC
* Function modification
- ADC12_Init()		: The ADC CPR reset value is updated ( 0x05 and not 0x01)

UART
* Function modification
- UART_Init()		: TOR and GTR regsiter's initialization added.
- UART_9BitsByteSend    : use a mask to send the a 9-bit data;
- UART_ByteReceive() 	: Initialize the wStatus to 0 
- UART_9BitByteReceive(): Initialize the wStatus to 0
- UART_DataReceive()	: Initialize the wStatus to 0
- UART_9BitDataReceive(): Initialize the wStatus to 0
- UART_StringReceive()	: Initialize the wStatus to 0

*Constant modification
- UART_NO_PARITY	: Initialized to 0x0000
- DUMMY 		: deleted 
- UART_FIFOEnableBit 	: deleted
- UART_RxEnableBit   	: deleted 
- UART_RunBit		: deleted
- UART_LoopBackBit   	: deleted
- UART_ParityOddBit  	: deleted
- UART_05StopBits     	: deleted
- UART_1StopBit       	: deleted
- UART_15StopBits     	: deleted
- UART_2StopBits      	: deleted
- UART_8BitsData       	: deleted
- UART_7BitsData       	: deleted
- UART_9BitsData       	: deleted
- UART_8BitsDataWakeUp 	: deleted

 

Examples update:
---------------

* Examples Code modification:

 - I2C : EEPROM_Send() : new routine
         EEPROM_Receive() : new routine
         EEPROM_WaitForlastTask() : replaced by EEPROM_WaitForLastTask()
         SendResult: deleted
         RecResult : deleted

 - Flash: - FLASH_WordRead() routine is used to read back the written value 
          - display the read value on the debugger output window.
          
 
 
 - Tim  : PWMO : in the TIM_PWMOModeConfig() routine, the full period 
                 parameter is 0x7FFF and not 0xFFFF.
          OCMP : TIM3 is initiliazed twice so delete one of the two initialization routines. 
          OPM  : TIM3 is initiliazed twice so delete one of the two initialization routines.
          music: TIM1 is initiliazed twice so delete one of the two initialization routines.
- UART	: Remove the UARTStatus variable from the uart interrupt handling in the UART 
	  interrupt example

- ADC	: ADC polling example changed


* V3.0 - 24/05/2005
====================

71xLibraryD.lib and 71xLibraryR.lib regenerated using the new library files.

I2C
* Function modification:
- I2C_FlagStatus bug fix when in INDIRECT access mode
- inline u32 I2C_GetStatus(I2C_TypeDef *I2Cx) retuns a 32bit value
* New Enumerations
- I2C_Flags enumaration : the I2C_ACK value is wrong (should be : 0x10000)
                          New   I2C_STOP  = 0x08000 & I2C_START = 0x20000
FLASH
* Function modification:
- The header of the FLASH_SectorErase() functions updated in the header file.
- FLASH_WritePrConfig : The temporary vaiable removed

Examples update:
---------------

All the readme files of the STR71x software library examples are restructed
and updated in order to contains enough of information wich can help the user
to understand correctly and easily the example objective. 

* Examples Code modification:

 - Adc12:  adc_int   : code Clean.
                   
           polling   : change the "ADC12_Calib()" function.
                       add an infinite loop to have a continuously conversion.
                       Add some code comment.

 - Bspi :  Code Clean.
           Change the  "TrFifoDepth" length to 9. 

 - Emi  :  Code Clean.

 - Gpio :  Code Clean and all the code use the STR71x software library function .

 - Pcu  :  Add some comment to the source code lines.

 - Rtc  :  Code Clean.

 - Uart :  interrupt :Code Clean.
           polling :Code Clean.
 
 - Xti  :  Code Clean.

 - Apb  :  Code Clean.

 - Can  :  Unchenged
 
 - Flash:  Code Clean.

 - I2c  :  i2c read  : New example
           i2c write : New example
 
 - Rccu :  remove some unused code line.
 
 - Tim  :  Music     : Change the music Note.
                     : Add the possibility to stop music.
           OCMP      : Code Clean.
           OPM       : Code Clean.
           PWMI      : New example.
           PWMO      : Code clean.
 - wdg  :  use GPIO0 instead of GPIO2.
           increase counter  value to 0xFFFFF. 
           Calculate the Refresh_Time limit.

* V2.0 - 22/12/2004
====================

STR71xDL7 renamed to 71xLibraryD
STR71xnDL renamed to 71xLibraryR.lib
newDL & newnDL renamed to debug.prj & release.prj

RTC
* Function modification:
- RTC_SetTime & RTC_SetAlarmTime fnctions are deleted (see the RTC application
note AN 1780)

XTI
* Function modification:
- XTI_LineModeConfig

ADC
* Function modification:
- ADC12_PrescalerConfig
- ADC12_ConversionValue: Clear the ADC pending flag

I2C
* Function modification:
-I2C_SpeedConfig

PCU
* Function modification:
-PCU_LPMEnter: Assembly lines removed


TIM
* Function modification:
- TIM_OCMPModeConfig
- New function: TIM_CounterValue. This function return the counter value of the
                                  selected timer

FLASH
* Function modification:
- FLASH_BlockWrite: deleted
- FLASH_BlockRead: deleted
- FLASH_WaitForLastTask: Modified
- FLASH_DWordWrite: Modified
- FLASH_SectorErase: Modified
- FLASH_Suspend: Mofifid
- FLASH_Resume: Modified
- FLASH_WritePrConfig: Modified
- FLASH_DebugPrConfig: renamed to FLASH_PermanantDebugPrConfig
- FLASH_ProtectionLevel: Modified
- FLASH_WaitForLastTask: Modified
* Constant modification:
- flashflags enumeration in the flash.h file is cerrected

RCCU
* New Enumerations
- PLL1 Multiplication factors and PLL2 Multiplication factors
* Function modification:
- RCCU_PLL1Config
- RCCU_PLL2Config
- #define RCCU_Main_Osc 16000000 definition moved to 71x_conf.h file


* V1.0 - 31/07/2003 
====================

  Created.



******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE******


