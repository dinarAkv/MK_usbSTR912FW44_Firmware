


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2008 STMicroelectron
                       ics ********************
    2 00000000         ;* File Name          : 91x_vect.s
    3 00000000         ;* Author             : MCD Application Team
    4 00000000         ;* Version            : V2.0.0
    5 00000000         ;* Date               : 09/29/2008
    6 00000000         ;* Description        : This File used to initialize the
                        exception and IRQ
    7 00000000         ;*                      vectors, and to enter/return to/
                       from exceptions
    8 00000000         ;*                      handlers.
    9 00000000         ;*******************************************************
                       ************************
   10 00000000         ; THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS A
                       T PROVIDING CUSTOMERS WITH
   11 00000000         ; CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER F
                       OR THEM TO SAVE TIME. AS
   12 00000000         ; A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE 
                       FOR ANY DIRECT, INDIRECT
   13 00000000         ; OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS AR
                       ISING FROM THE CONTENT
   14 00000000         ; OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF T
                       HE CODING INFORMATION
   15 00000000         ; CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
   16 00000000         ;*******************************************************
                       ***********************/
   17 00000000         
   18 00000000         
   19 00000000 FFFFF030 
                       VectorAddress
                               EQU              0xFFFFF030  ; VIC Vector addres
                                                            s register address.
                                                            
   20 00000000         
   21 00000000         
   22 00000000         ;*******************************************************
                       ************************
   23 00000000         ;              Import  the Program Start address from 91
                       x_init.s
   24 00000000         ;*******************************************************
                       ************************
   25 00000000         
   26 00000000                 EXPORT           Vectors
   27 00000000         ;*******************************************************
                       ************************
   28 00000000         ;              Import  the Reset_Handler address from 71
                       x_init.s
   29 00000000         ;*******************************************************
                       ************************
   30 00000000         
   31 00000000                 IMPORT           Reset_Handler
   32 00000000         
   33 00000000         ;*******************************************************
                       ************************
   34 00000000         ;                      Import exception handlers
   35 00000000         ;*******************************************************
                       ************************
   36 00000000         
   37 00000000                 IMPORT           Undefined_Handler



ARM Macro Assembler    Page 2 


   38 00000000                 IMPORT           SWI_Handler
   39 00000000                 IMPORT           Prefetch_Handler
   40 00000000                 IMPORT           Abort_Handler
   41 00000000                 IMPORT           FIQ_Handler
   42 00000000         
   43 00000000         ;*******************************************************
                       ************************
   44 00000000         ;                        Exception vectors
   45 00000000         ;*******************************************************
                       ************************
   46 00000000                 PRESERVE8
   47 00000000                 AREA             Reset, CODE, READONLY
   48 00000000                 ARM
   49 00000000         Vectors
   50 00000000 E59FF02C        LDR              PC, Reset_Addr
   51 00000004 E59FF02C        LDR              PC, Undefined_Addr
   52 00000008 E59FF02C        LDR              PC, SWI_Addr
   53 0000000C E59FF02C        LDR              PC, Prefetch_Addr
   54 00000010 E59FF02C        LDR              PC, Abort_Addr
   55 00000014 E1A00000        NOP                          ; Reserved vector
   56 00000018 E59FF02C        LDR              PC, IRQ_Addr
   57 0000001C         
   58 0000001C         ;*******************************************************
                       ************************
   59 0000001C         ;* Function Name  : FIQHandler
   60 0000001C         ;* Description    : This function is called when FIQ exc
                       eption is entered.
   61 0000001C         ;* Input          : none
   62 0000001C         ;* Output         : none
   63 0000001C         ;*******************************************************
                       ************************
   64 0000001C         FIQHandler
   65 0000001C E24EE004        SUB              lr,lr,#4    ; Update the link r
                                                            egister.
   66 00000020 E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
   67 00000024         ; address lr_fiq into the FIQ stack.
   68 00000024 E59F0094        ldr              r0,=FIQ_Handler
   69 00000028 E59FE094        ldr              lr,=FIQ_Handler_end
   70 0000002C E12FFF10        bx               r0          ;Branch to FIQ_Hand
                                                            ler.
   71 00000030         FIQ_Handler_end
   72 00000030         
   73 00000030 E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
   74 00000034         ; ...the exception interrupt.
   75 00000034         
   76 00000034         
   77 00000034         ;*******************************************************
                       ************************
   78 00000034         ;               Exception handlers address table
   79 00000034         ;*******************************************************
                       ************************
   80 00000034         
   81 00000034 00000000 
                       Reset_Addr
                               DCD              Reset_Handler



ARM Macro Assembler    Page 3 


   82 00000038 00000000 
                       Undefined_Addr
                               DCD              UndefinedHandler
   83 0000003C 00000000 
                       SWI_Addr
                               DCD              SWIHandler
   84 00000040 00000000 
                       Prefetch_Addr
                               DCD              PrefetchAbortHandler
   85 00000044 00000000 
                       Abort_Addr
                               DCD              DataAbortHandler
   86 00000048 00000000        DCD              0           ; Reserved vector
   87 0000004C 00000000 
                       IRQ_Addr
                               DCD              IRQHandler
   88 00000050         
   89 00000050         
   90 00000050         ;*******************************************************
                       ************************
   91 00000050         ;                                  MACRO
   92 00000050         ;*******************************************************
                       ************************
   93 00000050         ;*******************************************************
                       ************************
   94 00000050         ;* Macro Name     : SaveContext
   95 00000050         ;* Description    : This macro is used to save the conte
                       xt before entering
   96 00000050         ;                   an exception handler.
   97 00000050         ;* Input          : The range of registers to store.
   98 00000050         ;* Output         : none
   99 00000050         ;*******************************************************
                       ************************
  100 00000050                 MACRO
  101 00000050                 SaveContext      $reg1,$reg2
  102 00000050         
  103 00000050                 STMFD            sp!,{$reg1-$reg2,lr} ; Save The
                                                             workspace plus the
                                                             current return
  104 00000050         ; address lr_ mode into the stack.
  105 00000050         
  106 00000050                 MEND
  107 00000050         
  108 00000050         ;*******************************************************
                       ************************
  109 00000050         ;* Macro Name     : RestoreContext
  110 00000050         ;* Description    : This macro is used to restore the co
                       ntext to return from
  111 00000050         ;                   an exception handler and continue th
                       e program execution.
  112 00000050         ;* Input          : The range of registers to restore.
  113 00000050         ;* Output         : none
  114 00000050         ;*******************************************************
                       ************************
  115 00000050                 MACRO
  116 00000050                 RestoreContext   $reg1,$reg2
  117 00000050         
  118 00000050                 LDMFD            sp!,{$reg1-$reg2,pc}^ ; Return 
                                                            to the instruction 



ARM Macro Assembler    Page 4 


                                                            following...
  119 00000050         ; ...the exception interrupt.
  120 00000050                 MEND
  121 00000050         
  122 00000050         
  123 00000050         ;*******************************************************
                       ************************
  124 00000050         ;                         Exception Handlers
  125 00000050         ;*******************************************************
                       ************************
  126 00000050         
  127 00000050         
  128 00000050         ;*******************************************************
                       ************************
  129 00000050         ;* Function Name  : UndefinedHandler
  130 00000050         ;* Description    : This function is called when undefin
                       ed instruction
  131 00000050         ;                   exception is entered.
  132 00000050         ;* Input          : none
  133 00000050         ;* Output         : none
  134 00000050         ;*******************************************************
                       ************************
  135 00000050         
  136 00000050         UndefinedHandler
  137 00000050                 SaveContext      r0,r3       ; Save the workspac
                                                            e plus the current
  102 00000050         
  103 00000050 E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  104 00000054         ; address lr_ mode into the stack.
  105 00000054         
  138 00000054         ; return address lr_ und.
  139 00000054         
  140 00000054 E59F006C        ldr              r0,=Undefined_Handler
  141 00000058 E59FE06C        ldr              lr,=Undefined_Handler_end
  142 0000005C E12FFF10        bx               r0          ; Branch to Undefin
                                                            ed_Handler.
  143 00000060         
  144 00000060         Undefined_Handler_end
  145 00000060                 RestoreContext   r0,r3       ; Return to the ins
                                                            truction following.
                                                            ..
  117 00000060         
  118 00000060 E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  119 00000064         ; ...the exception interrupt.
  146 00000064         ; ...the undefined instruction.
  147 00000064         
  148 00000064         ;*******************************************************
                       ************************
  149 00000064         ;* Function Name  : SWIHandler
  150 00000064         ;* Description    : This function is called when SWI ins
                       truction executed.
  151 00000064         ;* Input          : none
  152 00000064         ;* Output         : none
  153 00000064         ;*******************************************************
                       ************************



ARM Macro Assembler    Page 5 


  154 00000064         
  155 00000064         SWIHandler
  156 00000064                 SaveContext      r0,r3       ; Save the workspac
                                                            e plus the current
  102 00000064         
  103 00000064 E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  104 00000068         ; address lr_ mode into the stack.
  105 00000068         
  157 00000068         ; return address lr_ svc.
  158 00000068         
  159 00000068 E59F0060        ldr              r0,=SWI_Handler
  160 0000006C E59FE060        ldr              lr,=SWI_Handler_end
  161 00000070 E12FFF10        bx               r0          ; Branch to SWI_Han
                                                            dler.
  162 00000074         
  163 00000074         SWI_Handler_end
  164 00000074                 RestoreContext   r0,r3       ; Return to the ins
                                                            truction following.
                                                            ..
  117 00000074         
  118 00000074 E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  119 00000078         ; ...the exception interrupt.
  165 00000078         ; ...the SWI instruction.
  166 00000078         ;*******************************************************
                       ************************
  167 00000078         ;* Function Name  : PrefetchAbortHandler
  168 00000078         ;* Description    : This function is called when Prefetc
                       h Abort
  169 00000078         ;                   exception is entered.
  170 00000078         ;* Input          : none
  171 00000078         ;* Output         : none
  172 00000078         ;*******************************************************
                       ************************
  173 00000078         
  174 00000078         PrefetchAbortHandler
  175 00000078 E24EE004        SUB              lr,lr,#4    ; Update the link r
                                                            egister.
  176 0000007C                 SaveContext      r0,r3       ; Save the workspac
                                                            e plus the current
  102 0000007C         
  103 0000007C E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  104 00000080         ; address lr_ mode into the stack.
  105 00000080         
  177 00000080         ; return address lr_abt.
  178 00000080         
  179 00000080 E59F0050        ldr              r0,=Prefetch_Handler
  180 00000084 E59FE050        ldr              lr,=Prefetch_Handler_end
  181 00000088 E12FFF10        bx               r0          ; Branch to Prefetc
                                                            h_Handler.
  182 0000008C         
  183 0000008C         Prefetch_Handler_end
  184 0000008C                 RestoreContext   r0,r3       ; Return to the ins
                                                            truction following 



ARM Macro Assembler    Page 6 


                                                            that...
  117 0000008C         
  118 0000008C E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  119 00000090         ; ...the exception interrupt.
  185 00000090         ; ...has generated the prefetch abort exception.
  186 00000090         
  187 00000090         ;*******************************************************
                       ************************
  188 00000090         ;* Function Name  : DataAbortHandler
  189 00000090         ;* Description    : This function is called when Data Ab
                       ort
  190 00000090         ;                   exception is entered.
  191 00000090         ;* Input          : none
  192 00000090         ;* Output         : none
  193 00000090         ;*******************************************************
                       ************************
  194 00000090         
  195 00000090         DataAbortHandler
  196 00000090 E24EE008        SUB              lr,lr,#8    ; Update the link r
                                                            egister.
  197 00000094                 SaveContext      r0,r3       ; Save the workspac
                                                            e plus the current
  102 00000094         
  103 00000094 E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  104 00000098         ; address lr_ mode into the stack.
  105 00000098         
  198 00000098         ; return address lr_ abt.
  199 00000098 E59F0040        ldr              r0,=Abort_Handler
  200 0000009C E59FE040        ldr              lr,=Abort_Handler_end
  201 000000A0 E12FFF10        bx               r0          ; Branch to Abort_H
                                                            andler.
  202 000000A4         
  203 000000A4         Abort_Handler_end
  204 000000A4         
  205 000000A4                 RestoreContext   r0,r3       ; Return to the ins
                                                            truction following 
                                                            that...
  117 000000A4         
  118 000000A4 E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  119 000000A8         ; ...the exception interrupt.
  206 000000A8         ; ...has generated the data abort exception.
  207 000000A8         ;*******************************************************
                       ************************
  208 000000A8         ;* Function Name  : IRQHandler
  209 000000A8         ;* Description    : This function is called when IRQ exc
                       eption is entered.
  210 000000A8         ;* Input          : none
  211 000000A8         ;* Output         : none
  212 000000A8         ;*******************************************************
                       ************************
  213 000000A8         
  214 000000A8         IRQHandler
  215 000000A8 E24EE004        SUB              lr,lr ,#4



ARM Macro Assembler    Page 7 


  216 000000AC                 SaveContext      r0,r3
  102 000000AC         
  103 000000AC E92D400F        STMFD            sp!,{r0-r3,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  104 000000B0         ; address lr_ mode into the stack.
  105 000000B0         
  217 000000B0 E59F0030        LDR              r0, = VectorAddress
  218 000000B4 E5900000        LDR              r0, [r0]    ; Read the routine 
                                                            address from VIC0 V
                                                            ector Address regis
                                                            ter     
  219 000000B8         
  220 000000B8 E12FFF30        BLX              r0          ; Branch with link 
                                                            to the IRQ handler.
                                                                    
  221 000000BC                 RestoreContext   r0,r3
  117 000000BC         
  118 000000BC E8FD800F        LDMFD            sp!,{r0-r3,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  119 000000C0         ; ...the exception interrupt.
  222 000000C0         
  223 000000C0         
  224 000000C0         
  225 000000C0 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFF030         LTORG
  226 000000EC         
  227 000000EC                 END
Command Line: --debug --xref --device=DARMST9 -o.\Obj\91x_vect.o -IC:\Keil\ARM\
INC\ST\91x --predefine="__MICROLIB SETA 1" --list=.\List\91x_vect.lst 91x_vect.
s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Abort_Addr 00000044

Symbol: Abort_Addr
   Definitions
      At line 85 in file 91x_vect.s
   Uses
      At line 54 in file 91x_vect.s
Comment: Abort_Addr used once
Abort_Handler_end 000000A4

Symbol: Abort_Handler_end
   Definitions
      At line 203 in file 91x_vect.s
   Uses
      At line 200 in file 91x_vect.s
Comment: Abort_Handler_end used once
DataAbortHandler 00000090

Symbol: DataAbortHandler
   Definitions
      At line 195 in file 91x_vect.s
   Uses
      At line 85 in file 91x_vect.s
Comment: DataAbortHandler used once
FIQHandler 0000001C

Symbol: FIQHandler
   Definitions
      At line 64 in file 91x_vect.s
   Uses
      None
Comment: FIQHandler unused
FIQ_Handler_end 00000030

Symbol: FIQ_Handler_end
   Definitions
      At line 71 in file 91x_vect.s
   Uses
      At line 69 in file 91x_vect.s
Comment: FIQ_Handler_end used once
IRQHandler 000000A8

Symbol: IRQHandler
   Definitions
      At line 214 in file 91x_vect.s
   Uses
      At line 87 in file 91x_vect.s
Comment: IRQHandler used once
IRQ_Addr 0000004C

Symbol: IRQ_Addr
   Definitions
      At line 87 in file 91x_vect.s
   Uses
      At line 56 in file 91x_vect.s
Comment: IRQ_Addr used once
PrefetchAbortHandler 00000078

Symbol: PrefetchAbortHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 174 in file 91x_vect.s
   Uses
      At line 84 in file 91x_vect.s
Comment: PrefetchAbortHandler used once
Prefetch_Addr 00000040

Symbol: Prefetch_Addr
   Definitions
      At line 84 in file 91x_vect.s
   Uses
      At line 53 in file 91x_vect.s
Comment: Prefetch_Addr used once
Prefetch_Handler_end 0000008C

Symbol: Prefetch_Handler_end
   Definitions
      At line 183 in file 91x_vect.s
   Uses
      At line 180 in file 91x_vect.s
Comment: Prefetch_Handler_end used once
Reset 00000000

Symbol: Reset
   Definitions
      At line 47 in file 91x_vect.s
   Uses
      None
Comment: Reset unused
Reset_Addr 00000034

Symbol: Reset_Addr
   Definitions
      At line 81 in file 91x_vect.s
   Uses
      At line 50 in file 91x_vect.s
Comment: Reset_Addr used once
SWIHandler 00000064

Symbol: SWIHandler
   Definitions
      At line 155 in file 91x_vect.s
   Uses
      At line 83 in file 91x_vect.s
Comment: SWIHandler used once
SWI_Addr 0000003C

Symbol: SWI_Addr
   Definitions
      At line 83 in file 91x_vect.s
   Uses
      At line 52 in file 91x_vect.s
Comment: SWI_Addr used once
SWI_Handler_end 00000074

Symbol: SWI_Handler_end
   Definitions
      At line 163 in file 91x_vect.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 160 in file 91x_vect.s
Comment: SWI_Handler_end used once
UndefinedHandler 00000050

Symbol: UndefinedHandler
   Definitions
      At line 136 in file 91x_vect.s
   Uses
      At line 82 in file 91x_vect.s
Comment: UndefinedHandler used once
Undefined_Addr 00000038

Symbol: Undefined_Addr
   Definitions
      At line 82 in file 91x_vect.s
   Uses
      At line 51 in file 91x_vect.s
Comment: Undefined_Addr used once
Undefined_Handler_end 00000060

Symbol: Undefined_Handler_end
   Definitions
      At line 144 in file 91x_vect.s
   Uses
      At line 141 in file 91x_vect.s
Comment: Undefined_Handler_end used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 49 in file 91x_vect.s
   Uses
      At line 26 in file 91x_vect.s
Comment: Vectors used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$Reset 00000000

Symbol: .debug_info$$$Reset
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$Reset undefinedComment: .debug_info$$$Reset unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$Reset 00000000

Symbol: .debug_line$$$Reset
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$Reset undefinedComment: .debug_line$$$Reset unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

VectorAddress FFFFF030

Symbol: VectorAddress
   Definitions
      At line 19 in file 91x_vect.s
   Uses
      At line 217 in file 91x_vect.s
Comment: VectorAddress used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Abort_Handler 00000000

Symbol: Abort_Handler
   Definitions
      At line 40 in file 91x_vect.s
   Uses
      At line 199 in file 91x_vect.s
Comment: Abort_Handler used once
FIQ_Handler 00000000

Symbol: FIQ_Handler
   Definitions
      At line 41 in file 91x_vect.s
   Uses
      At line 68 in file 91x_vect.s
Comment: FIQ_Handler used once
Prefetch_Handler 00000000

Symbol: Prefetch_Handler
   Definitions
      At line 39 in file 91x_vect.s
   Uses
      At line 179 in file 91x_vect.s
Comment: Prefetch_Handler used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 31 in file 91x_vect.s
   Uses
      At line 81 in file 91x_vect.s
Comment: Reset_Handler used once
SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 38 in file 91x_vect.s
   Uses
      At line 159 in file 91x_vect.s
Comment: SWI_Handler used once
Undefined_Handler 00000000

Symbol: Undefined_Handler
   Definitions
      At line 37 in file 91x_vect.s
   Uses
      At line 140 in file 91x_vect.s
Comment: Undefined_Handler used once
6 symbols
352 symbols in table
